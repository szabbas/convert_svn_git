<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
                             http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
                             http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">
    <import resource="efmfm-context.xml"/>
	<import resource="data-source.xml"/>
    <bean id="transactionManagerSpring" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>   
	<batch:job id = "contenttransferjob" job-repository="jobRepo">
		<batch:step id="readWriteStep">
			<batch:tasklet transaction-manager="transactionManagerSpring">
				<batch:chunk 
					reader = "requestObjectItemReader"
					writer = "requestObjectItemWriter"
					commit-interval = "3000"/>
			</batch:tasklet>
		</batch:step>	
	</batch:job>	
	<bean id = "jobRepo" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
 		<property name="transactionManager" ref="transactionManagerSpring"></property>
 	</bean>
 	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepo"/>
    </bean>
      <bean id="requestObjectItemReader" class="org.springframework.batch.item.database.HibernateCursorItemReader">
        <property name="sessionFactory" ref="sessionFactory" />  
         <property name="queryString" value=" FROM EFmFmEmployeeTripDetailPO b where boardedFlg like 'N' AND employeeStatus like 'allocated' " />
  </bean>   	
    <bean id="objectItemWriter" class="org.springframework.batch.item.database.HibernateItemWriter">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="jpaObjectItemWriter" class="org.springframework.batch.item.database.JpaItemWriter">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    
    <bean id="requestObjectItemWriter" class="com.newtglobal.eFmFmFleet.writer.EtaMessageSender">
    	<property name="entityManagerFactory" ref ="entityManagerFactory"></property>
    </bean>
     <bean id="sessionFactory" 
    	class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    	<property name="dataSource">
    		<ref bean="dataSource"/>
    	</property>
    	<property name="hibernateProperties">
    		<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.cache.region.factory_class" >org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.use_query_cache"  >true</prop>
				<prop key="hibernate.cache.use_second_level_cache" >true</prop>
				<prop key="openjpa.DataCache" >true</prop>
				<prop key="hibernate.cache.provider_class" >org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path" >ehcache.xml</prop>				
    		</props>
    	</property>
    	
		<property name="annotatedClasses">
		<list>
		<value>com.newtglobal.eFmFmFleet.model.PersistentLoginPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmAlertTxnPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmAlertTypeMasterPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmAreaMasterPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmAssignRoutePO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmClientMasterPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmRouteAreaMappingPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmClientRouteMappingPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmClientUserRolePO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmDriverFeedbackPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmDriverMasterPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmEmployeeTravelRequestPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmEscortMasterPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmRoleMasterPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmZoneMasterPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmUserMasterPO</value>
	    <value>com.newtglobal.eFmFmFleet.model.EFmFmDeviceMasterPO</value>		
		<value>com.newtglobal.eFmFmFleet.model.EFmFmVehicleCheckInPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmVehicleMasterPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmVendorMasterPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmActualRoutTravelledPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmTripTimingMasterPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmEmployeeRequestMasterPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmEmployeeTripDetailPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmEscortCheckInPO</value>			
		<value>com.newtglobal.eFmFmFleet.model.EFmFmVendorContractTypeMasterPO</value>
		<value>com.newtglobal.eFmFmFleet.model.EFmFmVendorContractInvoicePO</value>		
		<value>com.newtglobal.eFmFmFleet.model.EFmFmFixedDistanceContractDetailPO</value>	
		<value>com.newtglobal.eFmFmFleet.model.EFmFmTripBasedContractDetailPO</value>			
		<value>com.newtglobal.eFmFmFleet.model.EFmFmTripAlertsPO</value>	
	    <value>com.newtglobal.eFmFmFleet.model.EFmFmClientProjectDetailsPO</value>	
	    <value>com.newtglobal.eFmFmFleet.model.EFmFmClientBranchPO</value>
	    <value>com.newtglobal.eFmFmFleet.model.EFmFmVehicleInspectionPO</value>
	    
		</list>
		</property>
    </bean>    
   	<bean id="myLauncher" class="com.newtglobal.eFmFmFleet.launcher.MyLauncher">
   	    <property name="jobLauncher" ref="jobLauncher"></property>
	    <property name="job" ref="contenttransferjob"></property>
  	</bean>
  	
  	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="persistenceUnitName" value="EfmfmPersistenceUnit"></property>

		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="MYSQL" />
			</bean>
		</property>
	</bean>
	<task:scheduled-tasks>
   		<task:scheduled ref="myLauncher" method="launch"
     	fixed-delay="90000" />
  	</task:scheduled-tasks>	
</beans>